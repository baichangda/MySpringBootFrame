server:
  port: 8888
  compression:
    enabled: true
    mime-types: application/json,application/xml,application/xhtml+xml,text/html,text/xml,text/plain
    min-response-size: 1024
  servlet:
    session:
      timeout: 1800
spring:
   servlet:
     multipart:
       max-file-size: 10MB
   web:
     resources:
       chain:
         cache: false
   profiles.active: dev
   freemarker:
     checkTemplateLocation: false
   datasource:
     #mysql
#     driver-class-name: com.mysql.cj.jdbc.Driver
#     url: jdbc:mysql://127.0.0.1:3306/msbf?characterEncoding=utf8&useSSL=false&rewriteBatchedStatements=true&serverTimezone=GMT%2B8&generateSimpleParameterMetadata=true
#     username: root
#     password: 123456
     #pgsql
     driver-class-name: org.postgresql.Driver
     url: jdbc:postgresql://db.hbluewhale.com:12921/test_bcd
     username: dbuser
     password: hlxpassword
     druid:
       initial-size: 5
       max-active: 15
       filter:
         #sql统计配置
         stat:
           enabled: true
           #忽略参数合并sql
           #如果和flyway一起使用、因为druid bug、如果使用druid数据源、则不能开启此项、否则导致报错
           merge-sql: true
         #sql防火墙配置
         wall:
           enabled: true

       #开启web api调用统计
       web-stat-filter:
         enabled: true
         exclusions: "*.html,*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
         #设置session.getAttribute("user")的key名称
         principal-session-name: user
         url-pattern: /*
         #设置身份的cookie名称
         principal-cookie-name: JSESSIONID
       #开启stat的servlet、开启这个后才能访问页面
       stat-view-servlet:
         enabled: true
         #不能开启账号密码登录、和shiro框架存在冲突、直接进入index.html页面
#         login-username: admin
#         login-password: 123qwe
       #监控所有模块service文件夹下的类
       aop-patterns: com.bcd.*.service.*

  #  jpa配置
   jpa:
     # 是否允许jpa session在view依然开启,主要用于懒加载由于session关闭而在view层导致获取值异常
     open-in-view: false
     hibernate:
       # Hibernate DDL  auto: onCreate, onCreate-drop, update, validate
       ddl-auto: validate
     properties:
       hibernate:
         format_sql: true
         #mysql
#         dialect: org.hibernate.dialect.MySQL8Dialect
         #pgsql
         dialect: org.hibernate.dialect.PostgreSQL95Dialect
         current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext


  #  jdbcTemplate配置
   jdbc:
     template:
       fetch-size: -1
       max-rows: -1
       query-timeout:


#  mongodb配置
   data.mongodb.uri: mongodb://test:test@10.0.14.155:27017/test


#  i18n资源文件配置
   messages:
      basename: i18n/base/messages,i18n/main/messages,i18n/sys/messages,i18n/rdb/messages,i18n/mongodb/messages
      encoding: UTF-8
      cache-duration: -1

#  redis配置
#  如果都进行了配置,加载的先后顺序为:
#  sentinel>cluster>single
   redis:
      #公用配置
      ssl: false
      database: 11
      timeout: 10000
      password: redis-dev
      #同步jedis连接池
#      jedis:
#        pool:
#          maxIdle: 8
#          minIdle: 0
#          maxActive: 8
#          maxWait: -1
      #异步lettuce连接池(默认)
      lettuce:
        pool:
          maxIdle: 8
          minIdle: 0
          maxActive: 8
          maxWait: -1
        shutdown-timeout: 100ms
      #主从配置
#      sentinel:
#        master: myMaster
#        nodes: 127.0.0.1:23679,127.0.0.1:23680,127.0.0.1:23681
      #集群配置
#       cluster:
#         maxRedirects: 3
#         nodes:
#           - 114.116.107.184:7001
#           - 114.116.107.184:7002
#           - 114.116.107.184:7003
#           - 114.115.141.139:7004
#           - 114.115.141.139:7005
#           - 114.115.141.139:7006

      #单机配置
      host: redis.hbluewhale.com
      port: 16379

#  kafka配置
   kafka:
     consumer:
#        bootstrap-servers: kafka-test-1:9092,kafka-test-2:9093,kafka-test-3:9094
#        bootstrap-servers: kafka-dev-1:9092,kafka-dev-2:9093,kafka-dev-3:9094
        bootstrap-servers: kafka.hbluewhale.com:9092
        group-id: bcd
        key-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
        value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
     producer:
#        bootstrap-servers: kafka-test-1:9092,kafka-test-2:9093,kafka-test-3:9094
#        bootstrap-servers: kafka-dev-1:9092,kafka-dev-2:9093,kafka-dev-3:9094
        bootstrap-servers: kafka.hbluewhale.com:9092
        key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
        value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer

   mail:
      host: smtp.qq.com
      username:
      password:
      default-encoding: UTF-8

my:
  #是否启用集群定时任务失败注解
  enableScheduleFailedAnnotation: true
