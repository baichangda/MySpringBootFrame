package @{package}.controller;

import com.bcd.base.condition.Condition;
import com.bcd.base.condition.impl.*;
import com.bcd.mongodb.controller.BaseController;
import com.bcd.base.define.MessageDefine;
import com.bcd.base.message.JsonMessage;
import io.swagger.annotations.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.web.bind.annotation.*;
import java.util.Date;
import java.util.List;
import org.springframework.validation.annotation.Validated;
import @{package}.bean.@{upperModuleName}Bean;
import @{package}.service.@{upperModuleName}Service;

@SuppressWarnings(value = "unchecked")
@RestController
@RequestMapping("/api@{requestMappingPre}/@{lowerModuleName}")
public class @{upperModuleName}Controller extends BaseController {

    @Autowired
    private @{upperModuleName}Service @{lowerModuleName}Service;


    /**
     * 查询@{moduleNameCN}列表
     * @return
     */
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    @ApiOperation(value="查询@{moduleNameCN}列表",notes = "查询@{moduleNameCN}列表")
    @ApiResponse(code = 200,message = "@{moduleNameCN}列表")
    public JsonMessage<List<@{upperModuleName}Bean>> list(
@{controllerListParams}
            ){
        Condition condition= Condition.and(
@{controllerListConditions}
        );
        return JsonMessage.success(@{lowerModuleName}Service.findAll(condition));
    }


    /**
     * 查询@{moduleNameCN}列表
     * @return
     */
    @RequestMapping(value = "/page", method = RequestMethod.GET)
    @ApiOperation(value="查询@{moduleNameCN}分页",notes = "查询@{moduleNameCN}分页")
    @ApiResponse(code = 200,message = "@{moduleNameCN}分页结果集")
    public JsonMessage<Page<@{upperModuleName}Bean>> page(
@{controllerListParams},
            @ApiParam(value = "分页参数(页数)",example="1")
            @RequestParam(value = "pageNum",required = false)Integer pageNum,
            @ApiParam(value = "分页参数(页大小)",example="20")
            @RequestParam(value = "pageSize",required = false) Integer pageSize
            ){
        Condition condition= Condition.and(
@{controllerListConditions}
        );
        return JsonMessage.success(@{lowerModuleName}Service.findAll(condition,PageRequest.of(pageNum-1,pageSize)));

    }

    /**
     * 保存@{moduleNameCN}
     * @param @{lowerModuleName}
     * @return
     */
    @RequestMapping(value = "/save",method = RequestMethod.POST)
    @ApiOperation(value = "保存@{moduleNameCN}",notes = "保存@{moduleNameCN}")
    @ApiResponse(code = 200,message = "保存结果")
    public JsonMessage save(@ApiParam(value = "@{moduleNameCN}实体") @{paramValidateAnno} @RequestBody @{upperModuleName}Bean @{lowerModuleName}){
        @{lowerModuleName}Service.save(@{lowerModuleName});
        return MessageDefine.SUCCESS_SAVE.toJsonMessage(true);
    }


    /**
     * 删除@{moduleNameCN}
     * @param ids
     * @return
     */
    @RequestMapping(value = "/delete",method = RequestMethod.DELETE)
    @ApiOperation(value = "删除@{moduleNameCN}",notes = "删除@{moduleNameCN}")
    @ApiResponse(code = 200,message = "删除结果")
    public JsonMessage delete(@ApiParam(value = "@{moduleNameCN}id数组") @RequestParam @{pkType}[] ids){
        @{lowerModuleName}Service.deleteById(ids);
        return MessageDefine.SUCCESS_DELETE.toJsonMessage(true);
    }
}
